
import java.awt.Color;
import javax.swing.UIManager;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewJFrame.java
 *
 * Created on Dec 8, 2009, 2:35:42 PM
 */

/**
 *
 * @author Mukul
 */
public class NewJFrame extends javax.swing.JFrame {

    /** Creates new form NewJFrame */
    public NewJFrame() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        canvas1 = new java.awt.Canvas();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        canvas1.setBackground(new java.awt.Color(255, 0, 0));
        canvas1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                canvas1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                canvas1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                canvas1MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                canvas1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                canvas1MouseReleased(evt);
            }
        });
        canvas1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                canvas1MouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                canvas1MouseMoved(evt);
            }
        });
        canvas1.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                canvas1MouseWheelMoved(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(canvas1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 200, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(canvas1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 200, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void canvas1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_canvas1MouseDragged
 int x=evt.getX();
        int y=evt.getY();
        if(x<=255 && y<=255)
        {
        canvas1.setBackground(new Color(x,y,x/y));

        }
        else
        {
            canvas1.setSize(255,255);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_canvas1MouseDragged

    private void canvas1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_canvas1MouseClicked
       int x=evt.getX();
        int y=evt.getY();
        if(x<=255 && y<=255)
        {
        canvas1.setBackground(new Color(x,y,x/y));
        
        }
        else
        {
            canvas1.setSize(255,255);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_canvas1MouseClicked

    private void canvas1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_canvas1MouseEntered
      int x=evt.getX();
        int y=evt.getY();
        if(x<=255 && y<=255)
        {
        canvas1.setBackground(new Color(x,y,x/y));

        }
        else
        {
            canvas1.setSize(255,255);
        }  // TODO add your handling code here:
    }//GEN-LAST:event_canvas1MouseEntered

    private void canvas1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_canvas1MouseExited
int x=evt.getX();
        int y=evt.getY();
        if(x<=255 && y<=255)
        {
        canvas1.setBackground(new Color(x,y,x/y));

        }
        else
        {
            canvas1.setSize(255,255);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_canvas1MouseExited

    private void canvas1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_canvas1MousePressed
int x=evt.getX();
        int y=evt.getY();
        if(x<=255 && y<=255)
        {
        canvas1.setBackground(new Color(x,y,x/y));

        }
        else
        {
            canvas1.setSize(255,255);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_canvas1MousePressed

    private void canvas1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_canvas1MouseReleased
int x=evt.getX();
        int y=evt.getY();
        if(x<=255 && y<=255)
        {
        canvas1.setBackground(new Color(x,y,x/y));

        }
        else
        {
            canvas1.setSize(255,255);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_canvas1MouseReleased

    private void canvas1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_canvas1MouseMoved
int x=evt.getX();
        int y=evt.getY();
        if(x<=255 && y<=255)
        {
        canvas1.setBackground(new Color(x,y,x/y));

        }
        else
        {
            canvas1.setSize(255,255);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_canvas1MouseMoved

    private void canvas1MouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_canvas1MouseWheelMoved
int x=evt.getX();
        int y=evt.getY();
        if(x<=255 && y<=255)
        {
        canvas1.setBackground(new Color(x,y,x/y));

        }
        else
        {
            canvas1.setSize(255,255);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_canvas1MouseWheelMoved
    
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) throws Exception {
        
        UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Canvas canvas1;
    // End of variables declaration//GEN-END:variables

}
